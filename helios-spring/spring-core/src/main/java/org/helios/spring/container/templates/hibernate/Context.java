package org.helios.spring.container.templates.hibernate;

// Generated Oct 14, 2008 9:08:52 AM by Hibernate Tools 3.2.0.CR1

import java.util.HashSet;
import java.util.Set;

/**
 * Context generated by hbm2java
 */
public class Context implements java.io.Serializable {

	private static final long serialVersionUID = 6056619934130932836L;
	private int contextId;
	private String contextName;
	private Set<Bean> beans = new HashSet<Bean>(0);

	public Context() {
	}

	public Context(int contextId, String contextName) {
		this.contextId = contextId;
		this.contextName = contextName;
	}

	public Context(int contextId, String contextName, Set<Bean> beans) {
		this.contextId = contextId;
		this.contextName = contextName;
		this.beans = beans;
	}

	public int getContextId() {
		return this.contextId;
	}

	public void setContextId(int contextId) {
		this.contextId = contextId;
	}

	public String getContextName() {
		return this.contextName;
	}

	public void setContextName(String contextName) {
		this.contextName = contextName;
	}

	public Set<Bean> getBeans() {
		return this.beans;
	}

	public void setBeans(Set<Bean> beans) {
		this.beans = beans;
	}

	/**
	 * Constructs a <code>String</code> with all attributes
	 * in name = value format.
	 *
	 * @return a <code>String</code> representation 
	 * of this object.
	 */
	public String toString()
	{
	    final String CR = "\n\t";
	    final String CRR = "\n\t\t";

	
	    StringBuilder retValue = new StringBuilder();
	    
	    retValue.append("Context ( ")
	        .append(CR).append("contextId:").append(this.contextId)
	        .append(CR).append("contextName:").append(this.contextName);
	    retValue.append(CR).append("Beans:");
	    for(Bean b: beans) {
	    	retValue.append(CRR).append(b.toString());
	    }
	    retValue.append("\n )");
	    return retValue.toString();
	}

}
