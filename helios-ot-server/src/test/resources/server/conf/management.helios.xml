<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	">

	<bean id="MBeanServer" class="org.helios.jmx.util.MBeanServerFactory"
		lazy-init="false" factory-method="createMBeanServer">
		<constructor-arg type="java.lang.String" value="DefaultDomain" />
	</bean>
	
	<bean id="HeliosMBeanServer" class="org.helios.jmx.util.MBeanServerFactory"
		lazy-init="false" factory-method="createMBeanServerForwarder">
		<constructor-arg type="java.lang.String" value="Helios" />
		<constructor-arg type="javax.management.MBeanServer" ref="MBeanServer" />
	</bean>
	
	<bean id="HeliosMBeanServerFactory" class="org.helios.collectors.jmx.LocalMBeanServerConnectionFactory" init-method="start">
		<constructor-arg type="javax.management.MBeanServer" ref="HeliosMBeanServer" />
	</bean>
	

	

	<bean name="JVMDiagnosticService" class="org.helios.jmx.JVMDiagnosticService" factory-method="getInstance" />
	
	<bean name="bindInterface" class="org.helios.helpers.InetAddressHelper" factory-method="hostName" />
	
	<bean id="systemProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" depends-on="bindInterface">
		<property name="locations">
			<list>
			
			</list>
		</property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>

	<bean id="MBeanServerJMXUrl" class="javax.management.remote.JMXServiceURL"
		lazy-init="false" depends-on="systemProperties" >
		<constructor-arg type="java.lang.String"
			value="service:jmx:rmi://${java.rmi.server.hostname}:8002/jndi/rmi://${java.rmi.server.hostname}:8005/jmxrmi" />
	</bean>
	
	<!-- 
	org.helios.helpers.InetAddressHelper.hostName()
	 -->
	
	<!-- 
		value="service:jmx:rmi://0.0.0.0:8002/jndi/rmi://localhost:8003/jmxrmi"
	 -->


	<bean id="RMIRegistry" class="java.rmi.registry.LocateRegistry"
		lazy-init="false" factory-method="createRegistry">
		<constructor-arg value="8005" />
	</bean>
	
	<bean name="GroovyService" class="org.helios.scripting.console.GroovyService" >
		<property name="initScript">
			<value><![CDATA[
				AppCtx.getBeanDefinitionNames().each() { beanName ->
				    if(!AppCtx.isPrototype(beanName)) {
				        bean = AppCtx.getBean(beanName);				        
				        gbindings.put(beanName.replaceAll("\\.", "_"), bean);
				    }
				}				
				//TracerManager3.getInstance().getTracer().traceSticky(AppCtx.getBeanDefinitionNames().length, "Bean Count", "Helios", "Spring Container");
			]]></value>
		</property>
	</bean>	

	<!-- 
	<bean id="MBeanServerConnector" class="javax.management.remote.JMXConnectorServerFactory"
		lazy-init="false" init-method="start" factory-method="newJMXConnectorServer"
		depends-on="RMIRegistry">
		<constructor-arg ref="MBeanServerJMXUrl" />
		<constructor-arg>
			<map />
		</constructor-arg>
		<constructor-arg ref="MBeanServer" />
	</bean>
	
	<bean id="Printer" class="org.helios.jmx.util.JMXServerConnectionPrinter">
		<constructor-arg ref="MBeanServerConnector" />
	</bean>
	
	

	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
		<property name="beans">
			<map>
				<entry key="org.helios.jmx:service=JMXConnectorServer" value-ref="MBeanServerConnector" />
			</map>
		</property>
		<property name="server" ref="MBeanServer" />
	</bean>
	
	-->




</beans>   
