<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:jee="http://www.springframework.org/schema/jee"
   xmlns:p="http://www.springframework.org/schema/p"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:util="http://www.springframework.org/schema/util"
   xsi:schemaLocation="http://www.springframework.org/schema/beans
   					   http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
   					   http://www.springframework.org/schema/jee
					   http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
					   http://www.springframework.org/schema/util
					   http://www.springframework.org/schema/util/spring-util-3.1.xsd
					   http://www.springframework.org/schema/util
					   http://www.springframework.org/schema/util/spring-util-3.1.xsd"
    default-init-method="start" default-destroy-method="destroy">

    <bean id="HeliosNotificationListener" class="org.helios.collectors.notification.HeliosNotificationListener"
    		 factory-method="getInstance" depends-on="HeliosExecutorService" c:_0-ref="HeliosExecutorService" />

    <bean id="HeliosExecutorService" class="java.util.concurrent.Executors"
    		factory-method="newFixedThreadPool" c:_0="5" />

	<bean id="MBeanServerConnectionPoolFactory" class="org.helios.collectors.jmx.MBeanServerConnectionPool" scope="prototype"  >
		<property name="maxActive" value="5" />
		<property name="maxIdle" value="3" />
		<property name="minIdle" value="1" />
		<property name="maxWait" value="3000" />
		<property name="testOnBorrow" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
	</bean>


    <bean id="Jndi_MBeanServer" class="org.helios.collectors.jmx.JNDIMBeanServerConnectionFactory" init-method="start" destroy-method="stop">
    	<constructor-arg>
			<util:properties>
	             <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
	             <prop key="java.naming.provider.url">localhost:1099</prop>
	             <prop key="jndi.name">jmx/invoker/RMIAdaptor</prop>
			</util:properties>
		</constructor-arg>
    	<property name="serverIdentifierClassName" value="JBossMBeanServerIdentifier" />
    </bean>

    <!--
    <bean id="HeliosHQ_Jndi_MBeanServer" class="org.helios.collectors.jmx.JNDIMBeanServerConnectionFactory" init-method="start" destroy-method="stop">
    	<constructor-arg>
			<util:properties>
	             <prop key="java.naming.factory.initial">org.jnp.interfaces.NamingContextFactory</prop>
	             <prop key="java.naming.provider.url">helioshq:1099</prop>
	             <prop key="jndi.name">jmx/invoker/RMIAdaptor</prop>
			</util:properties>
		</constructor-arg>
    	<property name="serverIdentifierClassName" value="JBossMBeanServerIdentifier" />
    </bean>
    -->


<!--
    <bean id="JMXUrl_MBeanServer" class="org.helios.collectors.jmx.JMXServiceURLConnectionFactory"
    		c:_0="service:jmx:rmi://10.230.13.67:2097/jndi/rmi://10.230.13.67:2098/jmxconnectord" />

-->

    <bean id="JBossJMX" class="org.helios.collectors.jmx.JMXCollector"
    	depends-on="TracerFactory"
        c:_0-ref="Jndi_MBeanServer"
        p:objectName="org.helios.collectors:type=JMXCollector,name=JBoss"
        p:logErrors="true"
        p:logCollectionResult="true"
        p:frequency="15000"
        p:tracerFactory-ref="TracerFactory"
        p:tracingNameSpace="JMX,JBoss"
        p:availabilityMBean="jboss:service=Naming"
        p:availabilityAttribute="State"
        p:availabilitySegment="JMX,JBoss"
        p:traceMXBeans="false"
        p:virtualHostLocator="jboss.system:type=ServerInfo[HostName]"
        p:virtualAgentLocator="jboss.system:type=ServerConfig[ServerName]"
        >
        <property name="jmxObjects">
            <list>
                <ref bean="TransactionManagerActivity" />
                <ref bean="DestinationManagerAvailability" />
                <ref bean="DataSources" />
            </list>
        </property>
    </bean>

    <bean name="TransactionManagerActivity" class="org.helios.collectors.jmx.JMXObject">
        <property name="targetObjectName" value="jboss:service=TransactionManager"/>
        <property name="targetAttributeTraces">
            <list>
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="CommitCount"
                    p:segmentPrefixElements="{TARGET-PROPERTY:service}"
                    p:metricName="CommitCount"
                    p:traceType="DELTA_INT_AVG" />
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="TransactionCount"
                    p:segmentPrefixElements="{TARGET-PROPERTY:service}"
                    p:metricName="TransactionCount"
                    p:traceType="INT_AVG" />
            </list>
        </property>
    </bean>



    <bean id="DataSources" class="org.helios.collectors.jmx.JMXObject">
        <property name="targetObjectName" value="jboss.jca:service=ManagedConnectionPool,*"/>
        <property name="targetAttributeTraces">
            <list>
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="ConnectionCount"
                    p:segmentPrefixElements="DataSources"
                    p:segment="{TARGET-PROPERTY:name}"
                    p:defaultValue="0"
                    p:traceType="STICKY_INT_AVG" />
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="InUseConnectionCount"
                    p:segmentPrefixElements="DataSources"
                    p:segment="{TARGET-PROPERTY:name}"
                    p:traceType="STICKY_INT_AVG" />
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="ConnectionCreatedCount"
                    p:segmentPrefixElements="DataSources"
                    p:segment="{TARGET-PROPERTY:name}"
                    p:traceType="STICKY_INT_AVG" />
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="ConnectionDestroyedCount"
                    p:segmentPrefixElements="DataSources"
                    p:segment="{TARGET-PROPERTY:name}"
                    p:traceType="STICKY_INT_AVG" />
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="MaxConnectionsInUseCount"
                    p:segmentPrefixElements="DataSources"
                    p:segment="{TARGET-PROPERTY:name}"
                    p:traceType="STICKY_INT_AVG" />
            </list>
        </property>
    </bean>

    <bean name="DestinationManagerAvailability" class="org.helios.collectors.jmx.JMXObject">
        <property name="targetObjectName" value="jboss.mq:service=DestinationManager"/>
        <property name="targetAttributeTraces">
            <list>
                <bean class="org.helios.collectors.jmx.JMXAttributeTrace"
                    p:targetAttributeName="State"
                    p:segmentPrefixElements="{TARGET-PROPERTY:service}"
                    p:metricName="Avaliability"
                    p:traceType="STICKY_INT_AVG">
                    <property name="objectFormatters">
                        <list>
                            <ref bean="State2Availability" />
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>

    <bean name="State2Availability" class="org.helios.collectors.jmx.ScriptObjectFormatter">
        <property name="scriptBean">
            <bean class="org.helios.scripting.ScriptBean">
                <constructor-arg type="java.lang.String" value="groovy"/>
                <constructor-arg type="java.lang.String">
                    <value>
                        <![CDATA[ public format(obj){ if(obj==3) return "1" else return "0" } ]]>
                    </value>
                </constructor-arg>
                <constructor-arg type="java.lang.Class" value="org.helios.collectors.jmx.IObjectFormatter"/>
            </bean>
        </property>
        <property name="metricName" value="Availability"/>
    </bean>

    <bean id="CollectBSExceptionScript" class="org.helios.scripting.ScriptBeanWrapper">
        <property name="scriptBean">
            <bean class="org.helios.scripting.ScriptBean">
                <constructor-arg type="java.lang.String" value="beanshell"/>
                <constructor-arg type="java.lang.String">
                    <value>
                        <![CDATA[ Object executeScript(){ log.info("*** Exception Occured - [BeanShell] ***"); return null; } ]]>
                    </value>
                </constructor-arg>
                <constructor-arg type="java.lang.Class" value="org.helios.collectors.IScriptAction"/>
            </bean>
        </property>
    </bean>

</beans>
